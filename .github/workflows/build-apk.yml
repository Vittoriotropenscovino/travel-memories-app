name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'  # Usa registry stabile npm

      - name: Clean npm cache
        run: npm cache clean --force  # Pulisce cache corrotta
        working-directory: .

      - name: Install dependencies with debug
        run: |
          echo "Current directory: $(pwd)"
          ls -la  # Logga file in root per debug
          npm install --verbose  # Installa con log dettagliati
        working-directory: .

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Capacitor Add Android
        run: npx cap add android
        working-directory: .

      - name: Capacitor Sync
        run: npx cap sync android
        working-directory: .

      - name: Build Debug APK
        working-directory: ./android
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Build Release APK
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > app.keystore
          echo "storeFile=app.keystore" > keystore.properties
          echo "storePassword=$KEYSTORE_PASSWORD" >> keystore.properties
          echo "keyAlias=$KEY_ALIAS" >> keystore.properties
          echo "keyPassword=$KEY_PASSWORD" >> keystore.properties
          ./gradlew assembleRelease

      - name: Upload Release APK
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk
